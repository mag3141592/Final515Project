"""
Includes method for downloading datasets.
"""

import pandas as pd

import get_calendar_summary

import convert_to_matrix

import get_cleaned_listings

import sentiment

def download_dataset(city, state_abbv, country, yyyy_mm_dd, filename, write_csv=False):
    """
    Takes in strings of the dataset's city, state_abbv, country, filename, and date complied
    (formated as yyyy-mm-dd) and the filename. It returns the dataset as a dataframe.
    If write_csv = True, creates a csv file of the data in the directory.
    """
    country = country.replace(' ', '-')
    data_url = ('http://data.insideairbnb.com/' + country + '/' + state_abbv + '/' + city + '/'
                + yyyy_mm_dd + '/data/' + filename)
    dataframe = pd.read_csv(data_url)

    if write_csv:
        csv_name = filename.strip('.gz')
        dataframe.to_csv('./' + csv_name, index=False)

    return dataframe

def generate_cleaned_data(listings, listings_columns, reviews, calendar):
    """
    Runs the cleaning and data-retrieving scripts for listings, reviews, and calendar.
    Creates CSV files.
    CSV files must already exist by running download_dataset first.
    """

    # Clean listings
    clean_listings = get_cleaned_listings.get_listings_dataframe(listings, listings_columns, write_csv=True)

    # convert Listings to convert_to_matrix
    listings_matrix = convert_to_matrix.to_matrix(clean_listings)

    # run sentiment analysis
    reviews_dataset = reviews.dropna()
    sentiment_scores = sentiment.polarity(reviews_dataset, 'comments')
    sentiment_summarized = sentiment.summarize_sentiment(sentiment_scores, ['listing_id'], 'compound')

    # run calendar_summary
    get_calendar_summary.create_calendar_price_averages(calendar)

def merge_data():
    """
    Merges the cleaned data into one csv file.
    Creates CSV file.
    Cleaned CSV files must be generated by running generate_cleaned_data first.
    """
    clean_listings = pd.read_csv('clean_listings.csv')
    reviews = pd.read_csv('reviews_sa_summarized.csv')
    calendar = pd.read_csv('calendar_price_averages.csv')

    merged1 = clean_listings.merge(reviews, on='listing_id')
    final_merged = merged1.merge(calendar, on='listing_id')
    final_merged.to_csv('final_merged.csv', index=False)
    return final_merged
